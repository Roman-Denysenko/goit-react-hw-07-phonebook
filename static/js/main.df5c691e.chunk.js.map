{"version":3,"sources":["App.module.css","components/contactList/ContactList.module.css","components/filter/Filter.module.css","components/warning/Warning.module.css","redux/actions.js","redux/reducer.js","redux/store.js","redux/operations.js","redux/selectors.js","components/warning/Warning.js","components/contactForm/contactForm.js","components/contactList/contactList.js","components/filter/filter.js","App.js","index.js","components/contactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filter","reducerContactsItems","createReducer","_","payload","state","id","reducerFilter","reducerLoading","reducerError","combineReducers","items","loading","error","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contacts","rootReducer","devTools","process","axios","defaults","baseURL","fetchContacts","dispatch","get","then","data","catch","getContacts","getContactsItems","getFilterValue","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","el","name","includes","getLoading","Warning","className","s","warningContainer","ContactForm","number","warning","handleInputName","e","target","value","setState","handleDeleteContactFromFormState","handleSubmitForm","preventDefault","props","contactItem","uuidv4","find","item","onAdd","resetInput","newContactsFromAppState","this","formContainer","CSSTransition","in","timeout","classNames","unmountOnExit","onSubmit","form","label","input","type","onChange","button","Component","defaultProps","connect","selectors","post","addContact","visibleContacts","onDelete","delete","deleteContact","length","TransitionGroup","component","map","onClick","onFilter","container","appear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df5c691e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3_M-X\",\"enter\":\"App_enter__3pRbX\",\"enterActive\":\"App_enterActive__3tJXJ\",\"exit\":\"App_exit__1Sedl\",\"exitActive\":\"App_exitActive__3wylS\",\"appear\":\"App_appear__2sJAh\",\"appearActive\":\"App_appearActive__yeu2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__25bBJ\",\"item\":\"ContactList_item__1MUA4\",\"enter\":\"ContactList_enter__1sIMZ\",\"enterActive\":\"ContactList_enterActive__3_Sw5\",\"exit\":\"ContactList_exit__1vSfT\",\"exitActive\":\"ContactList_exitActive__nV_8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__c9j8x\",\"input\":\"Filter_input__1cmaZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warningContainer\":\"Warning_warningContainer__2mECf\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('fetchContactsError');\r\n\r\n\r\n\r\nexport const addContactRequest = createAction('addContactRequest');\r\nexport const addContactSuccess  = createAction('addContactSuccess');\r\nexport const addContactError = createAction('addContactError');\r\n\r\nexport const deleteContactRequest = createAction('deleteContactRequest');\r\nexport const deleteContactSuccess  = createAction('deleteContactSuccess');\r\nexport const deleteContactError = createAction('deleteContactError');\r\n\r\nexport const filter = createAction('filterContacts');\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  addContactRequest, addContactSuccess, addContactError,\r\n  deleteContactRequest, deleteContactSuccess, deleteContactError,\r\n  fetchContactsRequest, fetchContactsSuccess, fetchContactsError,\r\n   filter\r\n} from './actions';\r\n\r\nconst reducerContactsItems = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => ([...state, payload]),\r\n    [deleteContactSuccess]: (state, { payload }) => (state.filter(({id}) => id !== payload))   \r\n})\r\n\r\nconst reducerFilter = createReducer('', {\r\n    [filter]: (_, { payload }) =>payload,   \r\n})\r\n\r\nconst reducerLoading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]:()=>false,\r\n  [addContactRequest]:()=> true,\r\n  [addContactSuccess]:()=>  false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]:()=> true,\r\n  [deleteContactSuccess]:()=>  false,\r\n  [deleteContactError]:()=> false,\r\n})\r\n\r\nconst reducerError= createReducer(null,{})\r\n\r\nexport default combineReducers({\r\n  items: reducerContactsItems,\r\n  filter: reducerFilter,\r\n  loading: reducerLoading,\r\n  error:reducerError,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER, } from 'redux-persist'\r\n\r\nimport rootReducer from './reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts:rootReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default  store;","import axios from 'axios';\r\nimport {\r\n    addContactRequest, addContactSuccess,\r\n    addContactError, deleteContactRequest,\r\n    deleteContactSuccess, deleteContactError,\r\n    fetchContactsRequest, fetchContactsSuccess,\r\n    fetchContactsError\r\n} from './actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:1313/';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n\r\n    axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n        .catch(error=>dispatch(fetchContactsError(error)))\r\n    \r\n}\r\n\r\nexport const addContact = (item) => dispatch => {\r\n \r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', item)\r\n        .then(({data})=> dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)) )\r\n}\r\n\r\nexport const deleteContact = (id) => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(()=> dispatch(deleteContactSuccess(id)))\r\n        .catch(error=>dispatch(deleteContactError(error)))\r\n}\r\n\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts;\r\n\r\nconst getContactsItems = state => {\r\n    const contacts = getContacts(state);\r\n    return contacts.items;\r\n};\r\n\r\nconst getLoading = state => {\r\n    const contacts = getContacts(state);\r\n    return contacts.loading;\r\n}\r\n\r\nconst getFilterValue = state => {\r\n    const contacts = getContacts(state);\r\n    return contacts.filter;\r\n}\r\n\r\nconst getVisibleContacts =  createSelector(\r\n    [getContactsItems, getFilterValue],\r\n    (items,filter)=>{\r\n    const normalizedFilter = filter.toLowerCase();  \r\n   return( items.filter(el =>\r\n      el.name.toLowerCase().includes(normalizedFilter),\r\n  ))}\r\n)\r\n\r\nexport default {\r\n    getContacts,\r\n    getContactsItems,\r\n    getLoading,\r\n    getFilterValue,\r\n    getVisibleContacts,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nimport s from './Warning.module.css';\r\n\r\n\r\nconst Warning = ({ name }) => {\r\n    return (\r\n        <div className={s.warningContainer}>\r\n            <p>{ `${name} is already is contact`}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nWarning.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default Warning;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CSSTransition } from 'react-transition-group';\nimport Warning from '../warning';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport selectors from '../../redux/selectors';\n\n\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    contacts: PropTypes.object,\n    onAdd: PropTypes.func,\n  };\n\n  static defaultProps = {};\n\n  state = {\n    name: '',\n    number: '',\n    warning:false,\n  };\n\n  handleInputName = e => {\n\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n      warning:false});\n    this.handleDeleteContactFromFormState();\n  };\n\n  handleSubmitForm = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const  contacts = this.props.contacts.items;\n    const contactItem = { id: uuidv4(), name, number};\n\n    if (name === '' || number === '') {\n      return;\n    }\n\n    if (contacts.find(item => name === item.name)) {\n      this.setState({warning: true})\n      return;\n    } else {\n      this.setState({\n        warning:false,\n      });\n    }\n    this.props.onAdd(contactItem)\n    this.resetInput();\n  };\n\n  handleDeleteContactFromFormState = () => {\n    const newContactsFromAppState = this.props.contacts.items;\n    this.setState({ contacts: newContactsFromAppState });\n  };\n\n  resetInput = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n  \n    const { name, number,warning } = this.state;\n    return (\n      <div className={s.formContainer}>\n        <CSSTransition in={warning} timeout={250} classNames={s} unmountOnExit>\n           <Warning name={name} />\n        </CSSTransition>  \n      <form onSubmit={this.handleSubmitForm} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleInputName}\n          ></input>\n        </label>\n\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleInputName}\n          ></input>\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n        </form>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: selectors.getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n   onAdd: item => dispatch(addContact(item)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)  ;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/operations';\r\nimport selectors from '../../redux/selectors';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\n\r\nconst ContactList = ({ items,visibleContacts, onDelete }) => {\r\n  \r\n  if (items.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const ContactItem = ({ id, name, number }) => {\r\n    if (name === '' || number === '') {\r\n      return null;\r\n    }\r\n    return (\r\n      <CSSTransition key={id} timeout={250} classNames={s}>\r\n        <li  className={s.item}>\r\n        {name}: {number}\r\n        <button\r\n          className={s.button}\r\n          type=\"button\"\r\n          id={id}\r\n          onClick={()=>onDelete(id)}\r\n        >\r\n            Delete\r\n        </button>{' '}\r\n          </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n\r\n  return ( \r\n    <TransitionGroup component='ul'>\r\n      {visibleContacts.map(ContactItem)}\r\n    </TransitionGroup>\r\n  )\r\n};\r\n\r\nContactList.propTypes = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n  contacts:PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  items: selectors.getContactsItems(state),\r\n  visibleContacts:selectors.getVisibleContacts(state),\r\n});\r\n\r\n const mapDispatchToProps = dispatch => ({\r\n   onDelete: (id) => dispatch(deleteContact(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList) ;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { filter } from '../../redux/actions';\r\nimport selectors from '../../redux/selectors';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter =({value,onFilter })=> {\r\n   \r\n    return (\r\n      <>\r\n        <label className={s.label}>\r\n          Find contact by name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={value}\r\n            onChange={onFilter}\r\n          ></input>\r\n        </label>\r\n      </>\r\n    );\r\n}\r\n  \r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onFilter: PropTypes.func,\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  value: selectors.getFilterValue(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   onFilter: e=> dispatch(filter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter) ;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport s from './App.module.css';\nimport { fetchContacts } from './redux/operations';\nimport selectors from './redux/selectors';\n\nimport ContactForm from './components/contactForm';\nimport ContactList from './components/contactList';\nimport Filter from './components/filter';\n\nconst App = ({ items, error }) => {\n  fetchContacts();\n    \n    return (\n      <div className={s.container}>\n        <CSSTransition in={true} appear={true}classNames={s} timeout={500} unmountOnExit>\n          <h1>Phonebook</h1>\n        </CSSTransition>\n\n        <ContactForm />\n        {error&&<p>Loading...</p>} \n\n       <CSSTransition in={items.length>0} timeout={250} classNames={s} unmountOnExit>\n          <div>\n            <h2>Contacts</h2>\n            <Filter />\n        <ContactList\n            />\n            </div>\n          </CSSTransition>\n      </div>\n    );\n  }\n\nApp.propTypes = {\n  items: PropTypes.array,\n};\n\n\nconst mapStateToProps = state => ({\n  items: selectors.getContactsItems(state),\n  error:selectors.getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts:dispatch(fetchContacts()),\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../src/redux/store';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2jL9Y\",\"input\":\"ContactForm_input__1_six\",\"label\":\"ContactForm_label__3CBjF\",\"button\":\"ContactForm_button__1ufxU\",\"formContainer\":\"ContactForm_formContainer__1EDfQ\",\"enter\":\"ContactForm_enter__1mEfr\",\"enterActive\":\"ContactForm_enterActive__3DDVr\",\"exit\":\"ContactForm_exit__2dkQ1\",\"exitActive\":\"ContactForm_exitActive__2Qmmr\"};"],"sourceRoot":""}